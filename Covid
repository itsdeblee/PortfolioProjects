Select *
From Portfolio..CovidDeaths
Where continent is not null
Order by 3,4

Select *
From Portfolio..CovidVaccinations
Where continent is not null
Order by 3,4

Select location, date, total_cases, new_cases, total_deaths, population
From Portfolio..CovidDeaths
Where continent is not null
Order by 1,2

-- Total Cases vs Total Deaths
-- Likelihood of dying if you contract covid in your country
Select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From Portfolio..CovidDeaths
Where Location like '%states%'
Order by 1,2

--Total cases vs Population
--Percentage of population infected with covid
Select location, date, population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
From Portfolio..CovidDeaths
Where Location like '%states%'
Order by 1,2

--Countries with Highest Infection Rate compared to Population
Select location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/Population))*100 as PercentPopulationInfected
From Portfolio..CovidDeaths
Group by Location, Population
Order by PercentPopulationInfected desc

--Countries with Highest Death Count per Location
Select location, MAX(cast(total_deaths as int)) as TotalDeathCount
From Portfolio..CovidDeaths
Where continent is not null
Group by Location
Order by TotalDeathCount desc

--Highest Death Count per Continent
Select continent, MAX(cast(total_deaths as int)) as TotalDeathCount
From Portfolio..CovidDeaths
Where continent is not null
Group by continent
Order by TotalDeathCount desc

--Global Numbers
Select SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths,
(SUM(new_deaths)/SUM(new_cases))*100 as DeathPercentage
From Portfolio..CovidDeaths
Where Location like '%states%'
--Group by date
Order by 1,2

--Total Population vs Vaccinations
Select dea.continent, dea.LOCATION, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.date)
as RollingPeopleVaccinated, (RollingPeopleVaccinated/Population)*100
From Portfolio..CovidDeaths dea
Join Portfolio..CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
Where dea.continent is not null
Order by 1,2,3

--Use CTE
With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(Select dea.continent, dea.LOCATION, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.date)
as RollingPeopleVaccinated
From Portfolio..CovidDeaths dea
Join Portfolio..CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
Where dea.continent is not null)

Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

--Temp Table
Drop Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(Continent nvarchar(255),
Location nvarchar(255),
Date date,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.LOCATION, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.date)
as RollingPeopleVaccinated
From Portfolio..CovidDeaths dea
Join Portfolio..CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
Where dea.continent is not null

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated

--Creating view to store data for later visualizations
Create View PercentPopulationVaccinated as
Select dea.continent, dea.LOCATION, dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (Partition by dea.location Order by dea.location, dea.date)
as RollingPeopleVaccinated, (RollingPeopleVaccinated/Population)*100
From Portfolio..CovidDeaths dea
Join Portfolio..CovidVaccinations vac
    On dea.location = vac.location
    and dea.date = vac.date
Where dea.continent is not null
Order by 1,2,3

Select *
From PercentPopulationVaccinated
